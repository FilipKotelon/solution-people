export class HomePageComponent implements OnInit, OnDestroy, AfterViewInit {
  @ViewChildren('homeSection') sectionsList!: QueryList<any>;
  @ViewChild(NgScrollbar) scrollRef!: NgScrollbar;

  documentHTML = document.querySelector('html');
  sections: ElementRef[] = [];
  currentSectionId = 0;
  scrollTimeout!: ReturnType<typeof setTimeout>;
  listenToWheel = true;

  scrollSub!: Subscription;

  constructor(){}

  ngOnInit(){
    
  }

  ngOnDestroy(){
    // document.removeEventListener('wheel', this.onWheel);
    // document.removeEventListener('scroll', this.onScroll);
    this.documentHTML?.classList.remove('no-scroll');
  }

  ngAfterViewInit(){
    // document.addEventListener('wheel', this.onWheel);
    // document.addEventListener('scroll', this.onScroll);

    this.documentHTML?.classList.add('no-scroll');
    this.sections = this.sectionsList.toArray();

    this.scrollSub = this.scrollRef.verticalScrolled.subscribe(this.onWheel);

    this.scrollToCurrentSection();
  }

  onWheel = (e: Event) => {
    console.log(e);
    // if(e.deltaY && this.listenToWheel){
    //   const startId = this.currentSectionId;

    //   if(e.deltaY > 0 && this.currentSectionId + 1 < this.sections.length){
    //     console.log(window.scrollY)
    //     if(this.sections[this.currentSectionId + 1].nativeElement.offsetTop >= window.scrollY){
    //       this.currentSectionId++;
    //     }
    //   } else if(e.deltaY < 0 && this.currentSectionId - 1 >= 0) {
    //     console.log(this.sections[this.currentSectionId - 1].nativeElement.offsetTop, window.scrollY)
    //     if(this.sections[this.currentSectionId - 1].nativeElement.offsetTop <= window.scrollY){
    //       this.currentSectionId--;
    //     }
    //   }

    //   if(startId !== this.currentSectionId){
    //     this.scrollToCurrentSection();
    //   }
    // } else {
    //   this.scrollToCurrentSection();
    // }
  }

  onScroll = () => {
    this.listenToWheel = false;

    clearTimeout(this.scrollTimeout);
    this.scrollTimeout = setTimeout(() => {
      this.listenToWheel = true;
    }, 500);
  }

  scrollToCurrentSection = () => {
    this.scrollRef.scrollToElement(this.sections[this.currentSectionId].nativeElement);
    //this.sections[this.currentSectionId].nativeElement.scrollIntoView({ behavior: 'smooth' });
  }
}